{"ast":null,"code":"var _jsxFileName = \"/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/Movies.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { Link } from \"react-router-dom\";\nimport { API_ENDPOINT } from \"./context\";\nimport { useFetch } from \"./useFetch\";\nconst url = \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\n\nconst Movies = () => {\n  const {\n    loading,\n    data,\n    searchTerm\n  } = useGlobalContext();\n  const [movies, setMovies] = useState([]);\n  useFetch(`${API_ENDPOINT}&s=${searchTerm}`);\n  useEffect(() => {\n    if (data) {\n      const {\n        Search: movies\n      } = data;\n      setMovies(movies);\n    }\n  }, [data]);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, movies && movies.map(movie => {\n    const {\n      Poster: image,\n      Title: title,\n      Year: year,\n      imdbID: id\n    } = movie;\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}`,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"article\", {\n      className: \"movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image || url,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, year))));\n  }));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/Movies.js"],"names":["React","useState","useEffect","useGlobalContext","Link","API_ENDPOINT","useFetch","url","Movies","loading","data","searchTerm","movies","setMovies","Search","map","movie","Poster","image","Title","title","Year","year","imdbID","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,MAAMC,GAAG,GACP,8EADF;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAAgCR,gBAAgB,EAAtD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACAK,EAAAA,QAAQ,CAAE,GAAED,YAAa,MAAKM,UAAW,EAAjC,CAAR;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,EAAU;AACR,YAAM;AAAEI,QAAAA,MAAM,EAAEF;AAAV,UAAqBF,IAA3B;AACAG,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF,GALQ,EAKN,CAACF,IAAD,CALM,CAAT;AAOA,MAAID,OAAJ,EAAa,oBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,IACLA,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAW;AACpB,UAAM;AAAEC,MAAAA,MAAM,EAAEC,KAAV;AAAiBC,MAAAA,KAAK,EAAEC,KAAxB;AAA+BC,MAAAA,IAAI,EAAEC,IAArC;AAA2CC,MAAAA,MAAM,EAAEC;AAAnD,QAA0DR,KAAhE;AACA,wBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUQ,EAAG,EAAxB;AAA2B,MAAA,GAAG,EAAEA,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEN,KAAK,IAAIX,GAAnB;AAAwB,MAAA,GAAG,EAAEa,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,IAAJ,CAFF,CAFF,CADF,CADF;AAWD,GAbD,CAFJ,CADF;AAmBD,CAjCD;;AAmCA,eAAed,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { Link } from \"react-router-dom\";\nimport { API_ENDPOINT } from \"./context\";\nimport { useFetch } from \"./useFetch\";\nconst url =\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\n\nconst Movies = () => {\n  const { loading, data, searchTerm } = useGlobalContext();\n  const [movies, setMovies] = useState([]);\n  useFetch(`${API_ENDPOINT}&s=${searchTerm}`);\n\n  useEffect(() => {\n    if (data) {\n      const { Search: movies } = data;\n      setMovies(movies);\n    }\n  }, [data]);\n\n  if (loading) return <div className=\"loading\" />;\n\n  return (\n    <section className=\"movies\">\n      {movies &&\n        movies.map((movie) => {\n          const { Poster: image, Title: title, Year: year, imdbID: id } = movie;\n          return (\n            <Link to={`/movies/${id}`} key={id}>\n              <article className=\"movie\">\n                <img src={image || url} alt={title} />\n                <div className=\"movie-info\">\n                  <h4>{title}</h4>\n                  <p>{year}</p>\n                </div>\n              </article>\n            </Link>\n          );\n        })}\n    </section>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}