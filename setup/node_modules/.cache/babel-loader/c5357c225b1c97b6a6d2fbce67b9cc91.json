{"ast":null,"code":"var _jsxFileName = \"/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/context.js\";\nimport React, { useState, useContext, useEffect } from \"react\"; // make sure to use https\n\nexport const API_ENDPOINT = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\nconsole.log(API_ENDPOINT);\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"batmen\");\n  const [movies, setMovies] = useState([]);\n\n  const fetchMovies = () => {\n    console.log(\"fetching..\");\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, [searchTerm]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      loading,\n      movies,\n      setSearchTerm\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/context.js"],"names":["React","useState","useContext","useEffect","API_ENDPOINT","process","env","REACT_APP_MOVIE_API_KEY","console","log","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","movies","setMovies","fetchMovies","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;;AACA,OAAO,MAAMC,YAAY,GAAI,kCAAiCC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,EAA3F;AACPC,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,MAAMM,UAAU,GAAGV,KAAK,CAACW,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,QAAD,CAA5C;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMmB,WAAW,GAAG,MAAM;AACxBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD;;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACJ,UAAD,CAFM,CAAT;AAGA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAF;AAAWI,MAAAA,MAAX;AAAmBD,MAAAA;AAAnB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CAjBD,C,CAkBA;;;AACA,OAAO,MAAMQ,gBAAgB,GAAG,MAAM;AACpC,SAAOnB,UAAU,CAACQ,UAAD,CAAjB;AACD,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\n// make sure to use https\nexport const API_ENDPOINT = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\nconsole.log(API_ENDPOINT);\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"batmen\");\n  const [movies, setMovies] = useState([]);\n\n  const fetchMovies = () => {\n    console.log(\"fetching..\");\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, [searchTerm]);\n  return (\n    <AppContext.Provider value={{ loading, movies, setSearchTerm }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"]},"metadata":{},"sourceType":"module"}