{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useGlobalContext } from \"./context\";\nexport const useFetch = url => {\n  const {\n    setLoading,\n    setErrorMessage,\n    setData,\n    loading\n  } = useGlobalContext(); // const getProducts = async () => {\n  //   const response = await fetch(url);\n  //   const items = await response.json();\n  //   setLoading(false);\n  // };\n\n  const getData = async () => {\n    console.log(\"use fetch invoked\", url);\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(\"fetch result\", data, url);\n      const {\n        Response,\n        Error\n      } = data;\n      console.log(Response);\n\n      if (Response === \"False\") {\n        setErrorMessage(Error);\n        console.log(\"fetch error\", Error);\n      } else {\n        setData(data);\n        console.log(\"fetch data\", data);\n        setErrorMessage(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, [url]);\n};","map":{"version":3,"sources":["/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/useFetch.js"],"names":["React","useEffect","useGlobalContext","useFetch","url","setLoading","setErrorMessage","setData","loading","getData","console","log","response","fetch","data","json","Response","Error","error"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAC/B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,eAAd;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA;AAAxC,MAAoDN,gBAAgB,EAA1E,CAD+B,CAG/B;AACA;AACA;AACA;AACA;;AAEA,QAAMO,OAAO,GAAG,YAAY;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCP,GAAjC;AACAC,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,CAA5B;AACA,YAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,IAA5B,EAAkCV,GAAlC;AACA,YAAM;AAAEY,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAsBH,IAA5B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;;AACA,UAAIA,QAAQ,KAAK,OAAjB,EAA0B;AACxBV,QAAAA,eAAe,CAACW,KAAD,CAAf;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,KAA3B;AACD,OAHD,MAGO;AACLV,QAAAA,OAAO,CAACO,IAAD,CAAP;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,IAA1B;AAEAR,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,KAfD,CAeE,OAAOY,KAAP,EAAc;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD;;AACDb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAtBD;;AAwBAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACL,GAAD,CAFM,CAAT;AAGD,CApCM","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nexport const useFetch = (url) => {\n  const { setLoading, setErrorMessage, setData, loading } = useGlobalContext();\n\n  // const getProducts = async () => {\n  //   const response = await fetch(url);\n  //   const items = await response.json();\n  //   setLoading(false);\n  // };\n\n  const getData = async () => {\n    console.log(\"use fetch invoked\", url);\n    setLoading(true);\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(\"fetch result\", data, url);\n      const { Response, Error } = data;\n      console.log(Response);\n      if (Response === \"False\") {\n        setErrorMessage(Error);\n        console.log(\"fetch error\", Error);\n      } else {\n        setData(data);\n        console.log(\"fetch data\", data);\n\n        setErrorMessage(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, [url]);\n};\n"]},"metadata":{},"sourceType":"module"}