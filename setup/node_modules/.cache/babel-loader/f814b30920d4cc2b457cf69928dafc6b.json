{"ast":null,"code":"var _jsxFileName = \"/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/context.js\";\nimport React, { useState, useContext, useEffect, useCallback } from \"react\"; // make sure to use https\n\nexport const API_ENDPOINT = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"ba\");\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [defaultMovies, setDefaultMovies] = useState([]);\n  const fetchMovies = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${API_ENDPOINT}&s=${searchTerm}`);\n      const data = await response.json();\n      const {\n        Response\n      } = data;\n\n      if (Response === \"False\") {\n        setErrorMessage(data.Error);\n        setMovies(defaultMovies);\n      } else {\n        setMovies(data.Search);\n        setErrorMessage(\"\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchMovies();\n  }, [searchTerm, fetchMovies]);\n  useEffect(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${API_ENDPOINT}&s=batman`);\n      const data = await response.json();\n      const {\n        Response\n      } = data;\n\n      if (Response === \"False\") {\n        setDefaultMovies([]);\n      } else {\n        setDefaultMovies(data.Search);\n        setMovies(data.Search);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      loading,\n      movies,\n      errorMessage,\n      setSearchTerm\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","API_ENDPOINT","process","env","REACT_APP_MOVIE_API_KEY","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","movies","setMovies","errorMessage","setErrorMessage","defaultMovies","setDefaultMovies","fetchMovies","response","fetch","data","json","Response","Error","Search","error","console","log","useGlobalContext"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from \"react\";\n// make sure to use https\nexport const API_ENDPOINT = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"ba\");\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [defaultMovies, setDefaultMovies] = useState([]);\n\n  const fetchMovies = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_ENDPOINT}&s=${searchTerm}`);\n      const data = await response.json();\n      const { Response } = data;\n      if (Response === \"False\") {\n        setErrorMessage(data.Error);\n        setMovies(defaultMovies);\n      } else {\n        setMovies(data.Search);\n        setErrorMessage(\"\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  }, [searchTerm]);\n\n  useEffect(() => {\n    fetchMovies();\n  }, [searchTerm, fetchMovies]);\n\n  useEffect(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_ENDPOINT}&s=batman`);\n      const data = await response.json();\n      const { Response } = data;\n      if (Response === \"False\") {\n        setDefaultMovies([]);\n      } else {\n        setDefaultMovies(data.Search);\n        setMovies(data.Search);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  }, []);\n\n  return (\n    <AppContext.Provider\n      value={{ loading, movies, errorMessage, setSearchTerm }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"]},"metadata":{},"sourceType":"module"}