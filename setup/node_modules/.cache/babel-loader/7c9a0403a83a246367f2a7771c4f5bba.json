{"ast":null,"code":"// import React, { useState, useContext, useEffect, useCallback } from \"react\";\n// // make sure to use https\n// export const API_ENDPOINT = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\n// const AppContext = React.createContext();\n// const AppProvider = ({ children }) => {\n//   const [loading, setLoading] = useState(true);\n//   const [searchTerm, setSearchTerm] = useState(\"ba\");\n//   const [movies, setMovies] = useState([]);\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const [defaultMovies, setDefaultMovies] = useState([]);\n//   const fetchMovies = useCallback(async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(`${API_ENDPOINT}&s=${searchTerm}`);\n//       const data = await response.json();\n//       const { Response } = data;\n//       console.log(Response);\n//       if (Response === \"False\") {\n//         setErrorMessage(data.Error);\n//         setMovies(defaultMovies);\n//       } else {\n//         setMovies(data.Search);\n//         setErrorMessage(\"\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//     setLoading(false);\n//   }, [searchTerm]);\n//   useEffect(() => {\n//     fetchMovies();\n//   }, [searchTerm, fetchMovies]);\n//   useEffect(async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(`${API_ENDPOINT}&s=batman`);\n//       const data = await response.json();\n//       const { Response } = data;\n//       if (Response === \"False\") {\n//         setDefaultMovies([]);\n//       } else {\n//         setDefaultMovies(data.Search);\n//         setMovies(data.Search);\n//         setErrorMessage(\"\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//     setLoading(false);\n//   }, []);\n//   return (\n//     <AppContext.Provider\n//       value={{ loading, movies, errorMessage, setSearchTerm }}\n//     >\n//       {children}\n//     </AppContext.Provider>\n//   );\n// };\n// // make sure use\n// export const useGlobalContext = () => {\n//   return useContext(AppContext);\n// };\n// export { AppContext, AppProvider };","map":{"version":3,"sources":["/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/context.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState, useContext, useEffect, useCallback } from \"react\";\n// // make sure to use https\n// export const API_ENDPOINT = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\n// const AppContext = React.createContext();\n\n// const AppProvider = ({ children }) => {\n//   const [loading, setLoading] = useState(true);\n//   const [searchTerm, setSearchTerm] = useState(\"ba\");\n//   const [movies, setMovies] = useState([]);\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const [defaultMovies, setDefaultMovies] = useState([]);\n\n//   const fetchMovies = useCallback(async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(`${API_ENDPOINT}&s=${searchTerm}`);\n//       const data = await response.json();\n//       const { Response } = data;\n//       console.log(Response);\n//       if (Response === \"False\") {\n//         setErrorMessage(data.Error);\n//         setMovies(defaultMovies);\n//       } else {\n//         setMovies(data.Search);\n//         setErrorMessage(\"\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//     setLoading(false);\n//   }, [searchTerm]);\n\n//   useEffect(() => {\n//     fetchMovies();\n//   }, [searchTerm, fetchMovies]);\n\n//   useEffect(async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(`${API_ENDPOINT}&s=batman`);\n//       const data = await response.json();\n//       const { Response } = data;\n//       if (Response === \"False\") {\n//         setDefaultMovies([]);\n//       } else {\n//         setDefaultMovies(data.Search);\n//         setMovies(data.Search);\n//         setErrorMessage(\"\");\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//     setLoading(false);\n//   }, []);\n\n//   return (\n//     <AppContext.Provider\n//       value={{ loading, movies, errorMessage, setSearchTerm }}\n//     >\n//       {children}\n//     </AppContext.Provider>\n//   );\n// };\n// // make sure use\n// export const useGlobalContext = () => {\n//   return useContext(AppContext);\n// };\n\n// export { AppContext, AppProvider };\n"]},"metadata":{},"sourceType":"module"}