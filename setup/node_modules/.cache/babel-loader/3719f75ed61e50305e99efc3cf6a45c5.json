{"ast":null,"code":"import { useEffect, useCallback } from \"react\";\nimport { useGlobalContext } from \"../store/context\";\nexport const useFetch = url => {\n  const {\n    setLoading,\n    setErrorMessage,\n    setData\n  } = useGlobalContext();\n  const getData = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const {\n        Response,\n        Error\n      } = data;\n\n      if (Response === \"False\") {\n        setErrorMessage(Error);\n        setData(null);\n      } else {\n        setData(data);\n        setErrorMessage(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  }, [url]);\n  useEffect(() => {\n    getData();\n  }, [getData]);\n};","map":{"version":3,"sources":["/Users/mazal/Documents/selfProjects/reactPractice/react-practice-projects/movie-db/src/useFetch.js"],"names":["useEffect","useCallback","useGlobalContext","useFetch","url","setLoading","setErrorMessage","setData","getData","response","fetch","data","json","Response","Error","error","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAC/B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,eAAd;AAA+BC,IAAAA;AAA/B,MAA2CL,gBAAgB,EAAjE;AAEA,QAAMM,OAAO,GAAGP,WAAW,CAAC,YAAY;AACtCI,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAsBH,IAA5B;;AACA,UAAIE,QAAQ,KAAK,OAAjB,EAA0B;AACxBP,QAAAA,eAAe,CAACQ,KAAD,CAAf;AACAP,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAHD,MAGO;AACLA,QAAAA,OAAO,CAACI,IAAD,CAAP;AACAL,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,KAXD,CAWE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACDV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAjB0B,EAiBxB,CAACD,GAAD,CAjBwB,CAA3B;AAmBAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAGD,CAzBM","sourcesContent":["import { useEffect, useCallback } from \"react\";\nimport { useGlobalContext } from \"../store/context\";\n\nexport const useFetch = (url) => {\n  const { setLoading, setErrorMessage, setData } = useGlobalContext();\n\n  const getData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const { Response, Error } = data;\n      if (Response === \"False\") {\n        setErrorMessage(Error);\n        setData(null);\n      } else {\n        setData(data);\n        setErrorMessage(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  }, [url]);\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n};\n"]},"metadata":{},"sourceType":"module"}